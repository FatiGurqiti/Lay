// Generated by view binder compiler. Do not edit!
package com.lay.fibuv2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lay.fibuv2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView BlackFilterInSearch2;

  @NonNull
  public final RelativeLayout ScrollRelative;

  @NonNull
  public final ImageView notFoundImage;

  @NonNull
  public final TextView notFoundText;

  @NonNull
  public final ProgressBar progressBarInSearch2;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final ScrollView scrollViewofSearch;

  @NonNull
  public final RelativeLayout search;

  @NonNull
  public final TextView secondTextReference;

  private ActivitySearchBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView BlackFilterInSearch2, @NonNull RelativeLayout ScrollRelative,
      @NonNull ImageView notFoundImage, @NonNull TextView notFoundText,
      @NonNull ProgressBar progressBarInSearch2, @NonNull TextView resultText,
      @NonNull ScrollView scrollViewofSearch, @NonNull RelativeLayout search,
      @NonNull TextView secondTextReference) {
    this.rootView = rootView;
    this.BlackFilterInSearch2 = BlackFilterInSearch2;
    this.ScrollRelative = ScrollRelative;
    this.notFoundImage = notFoundImage;
    this.notFoundText = notFoundText;
    this.progressBarInSearch2 = progressBarInSearch2;
    this.resultText = resultText;
    this.scrollViewofSearch = scrollViewofSearch;
    this.search = search;
    this.secondTextReference = secondTextReference;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BlackFilterInSearch2;
      ImageView BlackFilterInSearch2 = ViewBindings.findChildViewById(rootView, id);
      if (BlackFilterInSearch2 == null) {
        break missingId;
      }

      id = R.id.Scroll_Relative;
      RelativeLayout ScrollRelative = ViewBindings.findChildViewById(rootView, id);
      if (ScrollRelative == null) {
        break missingId;
      }

      id = R.id.notFoundImage;
      ImageView notFoundImage = ViewBindings.findChildViewById(rootView, id);
      if (notFoundImage == null) {
        break missingId;
      }

      id = R.id.notFoundText;
      TextView notFoundText = ViewBindings.findChildViewById(rootView, id);
      if (notFoundText == null) {
        break missingId;
      }

      id = R.id.progressBarInSearch2;
      ProgressBar progressBarInSearch2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBarInSearch2 == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.scrollViewofSearch;
      ScrollView scrollViewofSearch = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewofSearch == null) {
        break missingId;
      }

      RelativeLayout search = (RelativeLayout) rootView;

      id = R.id.secondTextReference;
      TextView secondTextReference = ViewBindings.findChildViewById(rootView, id);
      if (secondTextReference == null) {
        break missingId;
      }

      return new ActivitySearchBinding((RelativeLayout) rootView, BlackFilterInSearch2,
          ScrollRelative, notFoundImage, notFoundText, progressBarInSearch2, resultText,
          scrollViewofSearch, search, secondTextReference);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
